{
  "address": "0x49251CD16F56C790AaD0af218F5eA345f4F3316B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "buyProduct",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProductsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserItem",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getUserItemsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "readProduct",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_indexToRemove",
          "type": "uint256"
        }
      ],
      "name": "removeProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_indexToUpdate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "writeProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4d505f8b2a81696ca3c6bc17b041330080ecf1cf532b84a816d86fce040567b9",
  "receipt": {
    "to": null,
    "from": "0x3dA8A4920B6F6326E8F4818Ce0c356c7B671805c",
    "contractAddress": "0x49251CD16F56C790AaD0af218F5eA345f4F3316B",
    "transactionIndex": 1,
    "gasUsed": "1372597",
    "logsBloom": "0x
    "blockHash": "0xd82b5419b284599fb8e30075f40ad806b7f2e6a89fe4b2284a47f853ad907868",
    "transactionHash": "0x4d505f8b2a81696ca3c6bc17b041330080ecf1cf532b84a816d86fce040567b9",
    "logs": [],
    "blockNumber": 21082856,
    "cumulativeGasUsed": "1412107",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "ff36f874925e7fa3983ce1cd7554b382",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"buyProduct\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProductsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserItem\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserItemsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"readProduct\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_indexToRemove\",\"type\":\"uint256\"}],\"name\":\"removeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_indexToUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"updateProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"writeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Version of Solidity compiler this program was written for\\npragma solidity >=0.7.0 <0.9.0;\\n\\n// Interface for the ERC20 token, in our case cUSD\\ninterface IERC20Token {\\n    // Transfers tokens from one address to another\\n    function transfer(address, uint256) external returns (bool);\\n\\n    // Approves a transfer of tokens from one address to another\\n    function approve(address, uint256) external returns (bool);\\n\\n    // Transfers tokens from one address to another, with the permission of the first address\\n    function transferFrom(address, address, uint256) external returns (bool);\\n\\n    // Returns the total supply of tokens\\n    function totalSupply() external view returns (uint256);\\n\\n    // Returns the balance of tokens for a given address\\n    function balanceOf(address) external view returns (uint256);\\n\\n    // Returns the amount of tokens that an address is allowed to transfer from another address\\n    function allowance(address, address) external view returns (uint256);\\n\\n    // Event for token transfers\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    // Event for approvals of token transfers\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\\n// Contract for the marketplace\\ncontract Marketplace {\\n    // Keeps track of the number of products in the marketplace\\n    uint256 internal productsLength = 0;\\n    // Address of the cEURToken\\n    address internal cEURTokenAddress = 0x10c892A6EC43a53E45D0B916B4b7D383B1b78C0F;\\n\\n    // Structure for a product\\n    struct Product {\\n        // Address of the product owner\\n        address payable owner;\\n        // Name of the product\\n        string name;\\n        // Link to an image of the product\\n        string image;\\n        // Description of the product\\n        string description;\\n        // Location of the product\\n        string location;\\n        // Price of the product in tokens\\n        uint256 price;\\n        // Number of times the product has been sold\\n        uint256 sold;\\n    }\\n\\n    // Mapping of products to their index\\n    mapping(uint256 => Product) internal products;\\n\\n    // Mapping containing and the number of times.an item is bought by a user \\n    mapping(address => mapping(uint256 => uint256)) internal userItemsCount;\\n\\n    // Mapping containing the items bought by a user\\n    mapping(address => uint256[]) internal userItems;\\n\\n    modifier isOwner(uint _index, address caller) {\\n        require(products[_index].owner == caller, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    // Writes a new product to the marketplace\\n    function writeProduct(\\n        string memory _name,\\n        string memory _image,\\n        string memory _description,\\n        string memory _location,\\n        uint256 _price\\n    ) public {\\n        // Add check to ensure that price of product is greater than 0\\n        require(_price > 0, \\\"Price must be greater than 0\\\");\\n        // Number of times the product has been sold is initially 0 because it has not been sold yet\\n        uint256 _sold = 0;\\n        // Adds a new Product struct to the products mapping\\n        products[productsLength] = Product(\\n            // Sender's address is set as the owner\\n            payable(msg.sender),\\n            _name,\\n            _image,\\n            _description,\\n            _location,\\n            _price,\\n            _sold\\n        );\\n        // Increases the number of products in the marketplace by 1\\n        productsLength++;\\n    }\\n\\n    // Reads a product from the marketplace\\n    function readProduct(\\n        // Index of the product\\n        uint256 _index\\n    )\\n        public\\n        view\\n        returns (\\n            address payable,\\n            string memory,\\n            string memory,\\n            string memory,\\n            string memory,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        // Returns the details of the product\\n        return (\\n            products[_index].owner,\\n            products[_index].name,\\n            products[_index].image,\\n            products[_index].description,\\n            products[_index].location,\\n            products[_index].price,\\n            products[_index].sold\\n        );\\n    }\\n\\n      // Buys a product from the marketplace\\n    function buyProduct(\\n        // Index of the product\\n        uint256 _index\\n    ) public payable {        \\n        uint256 _totalAmount;\\n        // transfer amount\\n        require(\\n            IERC20Token(cEURTokenAddress).transferFrom(\\n                // Sender's address is the buyer\\n                msg.sender,\\n                // Receiver's address is the contract\\n                address(this),\\n                // Amount of tokens to transfer is the total amount of order\\n                _totalAmount\\n            ),\\n            // If transfer fails, throw an error message\\n            \\\"Transfer failed.\\\"\\n        );\\n\\n        // Increase the number of times the product has been sold\\n        products[_index].sold++;\\n\\n        // Check if item does not exist in useritems and add item to user array\\n        if (userItemsCount[msg.sender][_index] == 0) {\\n            userItems[msg.sender].push(_index);\\n        }\\n\\n        // Update item count\\n        userItemsCount[msg.sender][_index]++;\\n    }\\n\\n    // Get user items array\\n    function getUserItem(address _user) public view returns (uint256[] memory){\\n        return userItems[_user];\\n    }\\n\\n    // Get user items count\\n    function getUserItemsCount(address _user, uint256 _index) public view returns (uint256){\\n        return userItemsCount[_user][_index];\\n    }\\n\\n    // Remove a product from the marketplace\\n    function removeProduct(\\n        uint _indexToRemove\\n    ) public isOwner(_indexToRemove, msg.sender) {\\n        delete (products[_indexToRemove]);\\n    }\\n\\n    // Update pricing of a product from the marketplace\\n    function updateProduct(\\n        uint _indexToUpdate,\\n        uint _newPrice\\n    ) public isOwner(_indexToUpdate, msg.sender) {\\n        products[_indexToUpdate].price = _newPrice;\\n    }\\n\\n    // Returns the number of products in the marketplace\\n    function getProductsLength() public view returns (uint256) {\\n        return (productsLength);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x47c7897037e712c31c34ffc1bbc42a55f1a2ed3d5ac2727b734546bdd5d8a9ee\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600080557310c892a6ec43a53e45d0b916b4b7d383b1b78c0f600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006957600080fd5b50611778806100796000396000f3fe60806040526004361061007b5760003560e01c80635ee95cae1161004e5780635ee95cae1461014e5780638642269e146101775780638da8f27b14610193578063fffa7e2e146101bc5761007b565b80631155dfe514610080578063279057f8146100ab57806331f45cab146100e85780633592c50814610111575b600080fd5b34801561008c57600080fd5b506100956101ff565b6040516100a29190610c2f565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610ce8565b610208565b6040516100df9190610c2f565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190610d28565b610263565b005b34801561011d57600080fd5b5061013860048036038101906101339190610d68565b61032a565b6040516101459190610e53565b60405180910390f35b34801561015a57600080fd5b5061017560048036038101906101709190610e75565b6103c1565b005b610191600480360381019061018c9190610e75565b6104f9565b005b34801561019f57600080fd5b506101ba60048036038101906101b59190610fe8565b610731565b005b3480156101c857600080fd5b506101e360048036038101906101de9190610e75565b6108a8565b6040516101f69796959493929190611173565b60405180910390f35b60008054905090565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b81338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610309576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103009061124a565b60405180910390fd5b82600260008681526020019081526020016000206005018190555050505050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103b557602002820191906000526020600020905b8154815260200190600101908083116103a1575b50505050509050919050565b80338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e9061124a565b60405180910390fd5b60026000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006104b29190610bb9565b6002820160006104c29190610bb9565b6003820160006104d29190610bb9565b6004820160006104e29190610bb9565b600582016000905560068201600090555050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161055a93929190611279565b6020604051808303816000875af1158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906112e8565b6105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390611361565b60405180910390fd5b600260008381526020019081526020016000206006016000815480929190610603906113b0565b91905055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054036106c757600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150555b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000815480929190610728906113b0565b91905055505050565b60008111610774576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076b90611444565b60405180910390fd5b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200185815260200184815260200183815260200182815250600260008054815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161082f9190611670565b5060408201518160020190816108459190611670565b50606082015181600301908161085b9190611670565b5060808201518160040190816108719190611670565b5060a0820151816005015560c0820151816006015590505060008081548092919061089b906113b0565b9190505550505050505050565b60006060806060806000806002600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008a8152602001908152602001600020600101600260008b8152602001908152602001600020600201600260008c8152602001908152602001600020600301600260008d8152602001908152602001600020600401600260008e815260200190815260200160002060050154600260008f81526020019081526020016000206006015485805461097c90611493565b80601f01602080910402602001604051908101604052809291908181526020018280546109a890611493565b80156109f55780601f106109ca576101008083540402835291602001916109f5565b820191906000526020600020905b8154815290600101906020018083116109d857829003601f168201915b50505050509550848054610a0890611493565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3490611493565b8015610a815780601f10610a5657610100808354040283529160200191610a81565b820191906000526020600020905b815481529060010190602001808311610a6457829003601f168201915b50505050509450838054610a9490611493565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac090611493565b8015610b0d5780601f10610ae257610100808354040283529160200191610b0d565b820191906000526020600020905b815481529060010190602001808311610af057829003601f168201915b50505050509350828054610b2090611493565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4c90611493565b8015610b995780601f10610b6e57610100808354040283529160200191610b99565b820191906000526020600020905b815481529060010190602001808311610b7c57829003601f168201915b505050505092509650965096509650965096509650919395979092949650565b508054610bc590611493565b6000825580601f10610bd75750610bf6565b601f016020900490600052602060002090810190610bf59190610bf9565b5b50565b5b80821115610c12576000816000905550600101610bfa565b5090565b6000819050919050565b610c2981610c16565b82525050565b6000602082019050610c446000830184610c20565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8982610c5e565b9050919050565b610c9981610c7e565b8114610ca457600080fd5b50565b600081359050610cb681610c90565b92915050565b610cc581610c16565b8114610cd057600080fd5b50565b600081359050610ce281610cbc565b92915050565b60008060408385031215610cff57610cfe610c54565b5b6000610d0d85828601610ca7565b9250506020610d1e85828601610cd3565b9150509250929050565b60008060408385031215610d3f57610d3e610c54565b5b6000610d4d85828601610cd3565b9250506020610d5e85828601610cd3565b9150509250929050565b600060208284031215610d7e57610d7d610c54565b5b6000610d8c84828501610ca7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610dca81610c16565b82525050565b6000610ddc8383610dc1565b60208301905092915050565b6000602082019050919050565b6000610e0082610d95565b610e0a8185610da0565b9350610e1583610db1565b8060005b83811015610e46578151610e2d8882610dd0565b9750610e3883610de8565b925050600181019050610e19565b5085935050505092915050565b60006020820190508181036000830152610e6d8184610df5565b905092915050565b600060208284031215610e8b57610e8a610c54565b5b6000610e9984828501610cd3565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ef582610eac565b810181811067ffffffffffffffff82111715610f1457610f13610ebd565b5b80604052505050565b6000610f27610c4a565b9050610f338282610eec565b919050565b600067ffffffffffffffff821115610f5357610f52610ebd565b5b610f5c82610eac565b9050602081019050919050565b82818337600083830152505050565b6000610f8b610f8684610f38565b610f1d565b905082815260208101848484011115610fa757610fa6610ea7565b5b610fb2848285610f69565b509392505050565b600082601f830112610fcf57610fce610ea2565b5b8135610fdf848260208601610f78565b91505092915050565b600080600080600060a0868803121561100457611003610c54565b5b600086013567ffffffffffffffff81111561102257611021610c59565b5b61102e88828901610fba565b955050602086013567ffffffffffffffff81111561104f5761104e610c59565b5b61105b88828901610fba565b945050604086013567ffffffffffffffff81111561107c5761107b610c59565b5b61108888828901610fba565b935050606086013567ffffffffffffffff8111156110a9576110a8610c59565b5b6110b588828901610fba565b92505060806110c688828901610cd3565b9150509295509295909350565b60006110de82610c5e565b9050919050565b6110ee816110d3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561112e578082015181840152602081019050611113565b60008484015250505050565b6000611145826110f4565b61114f81856110ff565b935061115f818560208601611110565b61116881610eac565b840191505092915050565b600060e082019050611188600083018a6110e5565b818103602083015261119a818961113a565b905081810360408301526111ae818861113a565b905081810360608301526111c2818761113a565b905081810360808301526111d6818661113a565b90506111e560a0830185610c20565b6111f260c0830184610c20565b98975050505050505050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006112346009836110ff565b915061123f826111fe565b602082019050919050565b6000602082019050818103600083015261126381611227565b9050919050565b61127381610c7e565b82525050565b600060608201905061128e600083018661126a565b61129b602083018561126a565b6112a86040830184610c20565b949350505050565b60008115159050919050565b6112c5816112b0565b81146112d057600080fd5b50565b6000815190506112e2816112bc565b92915050565b6000602082840312156112fe576112fd610c54565b5b600061130c848285016112d3565b91505092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b600061134b6010836110ff565b915061135682611315565b602082019050919050565b6000602082019050818103600083015261137a8161133e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113bb82610c16565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113ed576113ec611381565b5b600182019050919050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b600061142e601c836110ff565b9150611439826113f8565b602082019050919050565b6000602082019050818103600083015261145d81611421565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114ab57607f821691505b6020821081036114be576114bd611464565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826114e9565b61153086836114e9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061156d61156861156384610c16565b611548565b610c16565b9050919050565b6000819050919050565b61158783611552565b61159b61159382611574565b8484546114f6565b825550505050565b600090565b6115b06115a3565b6115bb81848461157e565b505050565b5b818110156115df576115d46000826115a8565b6001810190506115c1565b5050565b601f821115611624576115f5816114c4565b6115fe846114d9565b8101602085101561160d578190505b611621611619856114d9565b8301826115c0565b50505b505050565b600082821c905092915050565b600061164760001984600802611629565b1980831691505092915050565b60006116608383611636565b9150826002028217905092915050565b611679826110f4565b67ffffffffffffffff81111561169257611691610ebd565b5b61169c8254611493565b6116a78282856115e3565b600060209050601f8311600181146116da57600084156116c8578287015190505b6116d28582611654565b86555061173a565b601f1984166116e8866114c4565b60005b82811015611710578489015182556001820191506020850194506020810190506116eb565b8683101561172d5784890151611729601f891682611636565b8355505b6001600288020188555050505b50505050505056fea26469706673582212207d463be317f63a0d4cea7a9deee49623d137c0949d0e7453341ca35b5b32fadc64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80635ee95cae1161004e5780635ee95cae1461014e5780638642269e146101775780638da8f27b14610193578063fffa7e2e146101bc5761007b565b80631155dfe514610080578063279057f8146100ab57806331f45cab146100e85780633592c50814610111575b600080fd5b34801561008c57600080fd5b506100956101ff565b6040516100a29190610c2f565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610ce8565b610208565b6040516100df9190610c2f565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190610d28565b610263565b005b34801561011d57600080fd5b5061013860048036038101906101339190610d68565b61032a565b6040516101459190610e53565b60405180910390f35b34801561015a57600080fd5b5061017560048036038101906101709190610e75565b6103c1565b005b610191600480360381019061018c9190610e75565b6104f9565b005b34801561019f57600080fd5b506101ba60048036038101906101b59190610fe8565b610731565b005b3480156101c857600080fd5b506101e360048036038101906101de9190610e75565b6108a8565b6040516101f69796959493929190611173565b60405180910390f35b60008054905090565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b81338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610309576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103009061124a565b60405180910390fd5b82600260008681526020019081526020016000206005018190555050505050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103b557602002820191906000526020600020905b8154815260200190600101908083116103a1575b50505050509050919050565b80338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e9061124a565b60405180910390fd5b60026000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006104b29190610bb9565b6002820160006104c29190610bb9565b6003820160006104d29190610bb9565b6004820160006104e29190610bb9565b600582016000905560068201600090555050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161055a93929190611279565b6020604051808303816000875af1158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906112e8565b6105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390611361565b60405180910390fd5b600260008381526020019081526020016000206006016000815480929190610603906113b0565b91905055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054036106c757600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150555b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000815480929190610728906113b0565b91905055505050565b60008111610774576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076b90611444565b60405180910390fd5b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200185815260200184815260200183815260200182815250600260008054815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161082f9190611670565b5060408201518160020190816108459190611670565b50606082015181600301908161085b9190611670565b5060808201518160040190816108719190611670565b5060a0820151816005015560c0820151816006015590505060008081548092919061089b906113b0565b9190505550505050505050565b60006060806060806000806002600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008a8152602001908152602001600020600101600260008b8152602001908152602001600020600201600260008c8152602001908152602001600020600301600260008d8152602001908152602001600020600401600260008e815260200190815260200160002060050154600260008f81526020019081526020016000206006015485805461097c90611493565b80601f01602080910402602001604051908101604052809291908181526020018280546109a890611493565b80156109f55780601f106109ca576101008083540402835291602001916109f5565b820191906000526020600020905b8154815290600101906020018083116109d857829003601f168201915b50505050509550848054610a0890611493565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3490611493565b8015610a815780601f10610a5657610100808354040283529160200191610a81565b820191906000526020600020905b815481529060010190602001808311610a6457829003601f168201915b50505050509450838054610a9490611493565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac090611493565b8015610b0d5780601f10610ae257610100808354040283529160200191610b0d565b820191906000526020600020905b815481529060010190602001808311610af057829003601f168201915b50505050509350828054610b2090611493565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4c90611493565b8015610b995780601f10610b6e57610100808354040283529160200191610b99565b820191906000526020600020905b815481529060010190602001808311610b7c57829003601f168201915b505050505092509650965096509650965096509650919395979092949650565b508054610bc590611493565b6000825580601f10610bd75750610bf6565b601f016020900490600052602060002090810190610bf59190610bf9565b5b50565b5b80821115610c12576000816000905550600101610bfa565b5090565b6000819050919050565b610c2981610c16565b82525050565b6000602082019050610c446000830184610c20565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8982610c5e565b9050919050565b610c9981610c7e565b8114610ca457600080fd5b50565b600081359050610cb681610c90565b92915050565b610cc581610c16565b8114610cd057600080fd5b50565b600081359050610ce281610cbc565b92915050565b60008060408385031215610cff57610cfe610c54565b5b6000610d0d85828601610ca7565b9250506020610d1e85828601610cd3565b9150509250929050565b60008060408385031215610d3f57610d3e610c54565b5b6000610d4d85828601610cd3565b9250506020610d5e85828601610cd3565b9150509250929050565b600060208284031215610d7e57610d7d610c54565b5b6000610d8c84828501610ca7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610dca81610c16565b82525050565b6000610ddc8383610dc1565b60208301905092915050565b6000602082019050919050565b6000610e0082610d95565b610e0a8185610da0565b9350610e1583610db1565b8060005b83811015610e46578151610e2d8882610dd0565b9750610e3883610de8565b925050600181019050610e19565b5085935050505092915050565b60006020820190508181036000830152610e6d8184610df5565b905092915050565b600060208284031215610e8b57610e8a610c54565b5b6000610e9984828501610cd3565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ef582610eac565b810181811067ffffffffffffffff82111715610f1457610f13610ebd565b5b80604052505050565b6000610f27610c4a565b9050610f338282610eec565b919050565b600067ffffffffffffffff821115610f5357610f52610ebd565b5b610f5c82610eac565b9050602081019050919050565b82818337600083830152505050565b6000610f8b610f8684610f38565b610f1d565b905082815260208101848484011115610fa757610fa6610ea7565b5b610fb2848285610f69565b509392505050565b600082601f830112610fcf57610fce610ea2565b5b8135610fdf848260208601610f78565b91505092915050565b600080600080600060a0868803121561100457611003610c54565b5b600086013567ffffffffffffffff81111561102257611021610c59565b5b61102e88828901610fba565b955050602086013567ffffffffffffffff81111561104f5761104e610c59565b5b61105b88828901610fba565b945050604086013567ffffffffffffffff81111561107c5761107b610c59565b5b61108888828901610fba565b935050606086013567ffffffffffffffff8111156110a9576110a8610c59565b5b6110b588828901610fba565b92505060806110c688828901610cd3565b9150509295509295909350565b60006110de82610c5e565b9050919050565b6110ee816110d3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561112e578082015181840152602081019050611113565b60008484015250505050565b6000611145826110f4565b61114f81856110ff565b935061115f818560208601611110565b61116881610eac565b840191505092915050565b600060e082019050611188600083018a6110e5565b818103602083015261119a818961113a565b905081810360408301526111ae818861113a565b905081810360608301526111c2818761113a565b905081810360808301526111d6818661113a565b90506111e560a0830185610c20565b6111f260c0830184610c20565b98975050505050505050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006112346009836110ff565b915061123f826111fe565b602082019050919050565b6000602082019050818103600083015261126381611227565b9050919050565b61127381610c7e565b82525050565b600060608201905061128e600083018661126a565b61129b602083018561126a565b6112a86040830184610c20565b949350505050565b60008115159050919050565b6112c5816112b0565b81146112d057600080fd5b50565b6000815190506112e2816112bc565b92915050565b6000602082840312156112fe576112fd610c54565b5b600061130c848285016112d3565b91505092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b600061134b6010836110ff565b915061135682611315565b602082019050919050565b6000602082019050818103600083015261137a8161133e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113bb82610c16565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113ed576113ec611381565b5b600182019050919050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b600061142e601c836110ff565b9150611439826113f8565b602082019050919050565b6000602082019050818103600083015261145d81611421565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114ab57607f821691505b6020821081036114be576114bd611464565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826114e9565b61153086836114e9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061156d61156861156384610c16565b611548565b610c16565b9050919050565b6000819050919050565b61158783611552565b61159b61159382611574565b8484546114f6565b825550505050565b600090565b6115b06115a3565b6115bb81848461157e565b505050565b5b818110156115df576115d46000826115a8565b6001810190506115c1565b5050565b601f821115611624576115f5816114c4565b6115fe846114d9565b8101602085101561160d578190505b611621611619856114d9565b8301826115c0565b50505b505050565b600082821c905092915050565b600061164760001984600802611629565b1980831691505092915050565b60006116608383611636565b9150826002028217905092915050565b611679826110f4565b67ffffffffffffffff81111561169257611691610ebd565b5b61169c8254611493565b6116a78282856115e3565b600060209050601f8311600181146116da57600084156116c8578287015190505b6116d28582611654565b86555061173a565b601f1984166116e8866114c4565b60005b82811015611710578489015182556001820191506020850194506020810190506116eb565b8683101561172d5784890151611729601f891682611636565b8355505b6001600288020188555050505b50505050505056fea26469706673582212207d463be317f63a0d4cea7a9deee49623d137c0949d0e7453341ca35b5b32fadc64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 71,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "productsLength",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 74,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "cEURTokenAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 94,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "products",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Product)89_storage)"
      },
      {
        "astId": 100,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "userItemsCount",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 105,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "userItems",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Product)89_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.Product)",
        "numberOfBytes": "32",
        "value": "t_struct(Product)89_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Product)89_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Product",
        "members": [
          {
            "astId": 76,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 78,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 80,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "image",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 82,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 84,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "location",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 86,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 88,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "sold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
