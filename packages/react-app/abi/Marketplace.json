{
  "address": "0xADBbAFC3229D8C73F76ba360974Dc92f2aB16718",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "productIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "image",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ProductAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "productIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "ProductPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "productIndex",
          "type": "uint256"
        }
      ],
      "name": "ProductRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "productIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "ProductUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "buyProduct",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProductsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserItem",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getUserItemsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "readProduct",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "image",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sold",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_indexToRemove",
          "type": "uint256"
        }
      ],
      "name": "removeProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_indexToUpdate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "writeProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd0a0906d0cc08d17424bbfb22e9e3b2c68ee541d84d7c883be311fc0dd4fd414",
  "receipt": {
    "to": null,
    "from": "0x3dA8A4920B6F6326E8F4818Ce0c356c7B671805c",
    "contractAddress": "0xADBbAFC3229D8C73F76ba360974Dc92f2aB16718",
    "transactionIndex": 0,
    "gasUsed": "1920708",
    "logsBloom": "0x
    "blockHash": "0xe585ed07e60e44549a71c8c4bdea7971d4191e3dc01f1e0566ad987ba5a85455",
    "transactionHash": "0xd0a0906d0cc08d17424bbfb22e9e3b2c68ee541d84d7c883be311fc0dd4fd414",
    "logs": [],
    "blockNumber": 21367949,
    "cumulativeGasUsed": "1920708",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 6,
  "solcInputHash": "6218788d3bea2144b9b1499e25d741c6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"productIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ProductAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"productIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"ProductPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"productIndex\",\"type\":\"uint256\"}],\"name\":\"ProductRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"productIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"ProductUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"buyProduct\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProductsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserItem\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserItemsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"readProduct\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_indexToRemove\",\"type\":\"uint256\"}],\"name\":\"removeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_indexToUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"updateProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"writeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A decentralized marketplace contract for buying and selling products using ERC20 tokens.\",\"events\":{\"ProductAdded(address,uint256,string,string,string,string,uint256)\":{\"details\":\"Emitted when a new product is added to the marketplace.\",\"params\":{\"description\":\"Description of the new product.\",\"image\":\"Link to the image of the new product.\",\"location\":\"Location information of the new product.\",\"name\":\"Name of the new product.\",\"owner\":\"Address of the owner who added the product.\",\"price\":\"Price of the new product.\",\"productIndex\":\"Index of the product that was added.\"}},\"ProductPurchased(address,uint256,uint256)\":{\"details\":\"Emitted when a product is successfully purchased from the marketplace.\",\"params\":{\"buyer\":\"Address of the buyer who purchased the product.\",\"productIndex\":\"Index of the product that was purchased.\",\"quantity\":\"The quantity of the product purchased.\"}},\"ProductRemoved(address,uint256)\":{\"details\":\"Emitted when a product is removed from the marketplace.\",\"params\":{\"owner\":\"Address of the owner who removed the product.\",\"productIndex\":\"Index of the product that was removed.\"}},\"ProductUpdated(address,uint256,uint256)\":{\"details\":\"Emitted when the price of a product in the marketplace is updated.\",\"params\":{\"newPrice\":\"The new price of the product after the update.\",\"owner\":\"Address of the owner who updated the product.\",\"productIndex\":\"Index of the product that was updated.\"}}},\"kind\":\"dev\",\"methods\":{\"buyProduct(uint256)\":{\"details\":\"Buys a product from the marketplace.\",\"params\":{\"_index\":\"Index of the product.\"}},\"getProductsLength()\":{\"details\":\"Returns the number of products in the marketplace.\",\"returns\":{\"_0\":\"The total number of products.\"}},\"getUserItem(address)\":{\"details\":\"Get user items array.\",\"params\":{\"_user\":\"Address of the user.\"},\"returns\":{\"_0\":\"An array of product indices owned by the user.\"}},\"getUserItemsCount(address,uint256)\":{\"details\":\"Get user items count.\",\"params\":{\"_index\":\"Index of the product.\",\"_user\":\"Address of the user.\"},\"returns\":{\"_0\":\"The number of times the user has bought the specified product.\"}},\"readProduct(uint256)\":{\"details\":\"Reads a product from the marketplace.\",\"params\":{\"_index\":\"Index of the product.\"},\"returns\":{\"description\":\"Description of the product.\",\"image\":\"Link to an image of the product.\",\"location\":\"Location of the product.\",\"name\":\"Name of the product.\",\"owner\":\"Address of the product owner.\",\"price\":\"Price of the product in tokens.\",\"sold\":\"Number of times the product has been sold.\"}},\"removeProduct(uint256)\":{\"details\":\"Remove a product from the marketplace.\",\"params\":{\"_indexToRemove\":\"Index of the product to remove.\"}},\"updateProduct(uint256,uint256)\":{\"details\":\"Update pricing of a product from the marketplace.\",\"params\":{\"_indexToUpdate\":\"Index of the product to update.\",\"_newPrice\":\"New price of the product.\"}},\"writeProduct(string,string,string,string,uint256)\":{\"details\":\"Writes a new product to the marketplace.\",\"params\":{\"_description\":\"Description of the product.\",\"_image\":\"Link to an image of the product.\",\"_location\":\"Location of the product.\",\"_name\":\"Name of the product.\",\"_price\":\"Price of the product in tokens.\"}}},\"stateVariables\":{\"products\":{\"details\":\"Mapping of products to their index. The key is the product index, and the value is a struct representing the product details.\"},\"userItems\":{\"details\":\"Mapping containing the items bought by a user. The key is the user's address, and the value is an array of product indices representing the items bought by the user.\"},\"userItemsCount\":{\"details\":\"Mapping containing the number of times an item is bought by a user. The outer mapping uses the user's address as the key, and the inner mapping uses the product index as the key. The value is the count of how many times the user has bought the corresponding product.\"}},\"title\":\"Marketplace Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Version of Solidity compiler this program was written for\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/**\\n * @dev Interface for the ERC20 token, in this case cEURToken.\\n */\\ninterface IERC20Token {\\n    // Transfers tokens from one address to another\\n    function transfer(address, uint256) external returns (bool);\\n\\n    // Approves a transfer of tokens from one address to another\\n    function approve(address, uint256) external returns (bool);\\n\\n    // Transfers tokens from one address to another, with the permission of the first address\\n    function transferFrom(address, address, uint256) external returns (bool);\\n\\n    // Returns the total supply of tokens\\n    function totalSupply() external view returns (uint256);\\n\\n    // Returns the balance of tokens for a given address\\n    function balanceOf(address) external view returns (uint256);\\n\\n    // Returns the amount of tokens that an address is allowed to transfer from another address\\n    function allowance(address, address) external view returns (uint256);\\n\\n    // Event for token transfers\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    // Event for approvals of token transfers\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\\n/**\\n * @title Marketplace Contract\\n * @dev A decentralized marketplace contract for buying and selling products using ERC20 tokens.\\n */\\ncontract Marketplace {\\n    // Keeps track of the number of products in the marketplace\\n    uint256 internal productsLength = 0;\\n    // Address of the cEURToken\\n    address internal cEURTokenAddress = 0x10c892A6EC43a53E45D0B916B4b7D383B1b78C0F;\\n\\n    /**\\n     * @dev Structure for a product in the marketplace.\\n     */\\n    struct Product {\\n        // Address of the product owner\\n        address payable owner;\\n        // Name of the product\\n        string name;\\n        // Link to an image of the product\\n        string image;\\n        // Description of the product\\n        string description;\\n        // Location of the product\\n        string location;\\n        // Price of the product in tokens\\n        uint256 price;\\n        // Number of times the product has been sold\\n        uint256 sold;\\n    }\\n\\n    /**\\n     * @dev Emitted when a product is successfully purchased from the marketplace.\\n     * @param buyer Address of the buyer who purchased the product.\\n     * @param productIndex Index of the product that was purchased.\\n     * @param quantity The quantity of the product purchased.\\n     */\\n    event ProductPurchased(address indexed buyer, uint256 indexed productIndex, uint256 quantity);\\n\\n    /**\\n     * @dev Emitted when a product is removed from the marketplace.\\n     * @param owner Address of the owner who removed the product.\\n     * @param productIndex Index of the product that was removed.\\n     */\\n    event ProductRemoved(address indexed owner, uint256 indexed productIndex);\\n\\n    /**\\n     * @dev Emitted when the price of a product in the marketplace is updated.\\n     * @param owner Address of the owner who updated the product.\\n     * @param productIndex Index of the product that was updated.\\n     * @param newPrice The new price of the product after the update.\\n     */\\n    event ProductUpdated(address indexed owner, uint256 indexed productIndex, uint256 newPrice);\\n\\n    /**\\n     * @dev Emitted when a new product is added to the marketplace.\\n     * @param owner Address of the owner who added the product.\\n     * @param productIndex Index of the product that was added.\\n     * @param name Name of the new product.\\n     * @param image Link to the image of the new product.\\n     * @param description Description of the new product.\\n     * @param location Location information of the new product.\\n     * @param price Price of the new product.\\n     */\\n    event ProductAdded(\\n        address indexed owner,\\n        uint256 indexed productIndex,\\n        string name,\\n        string image,\\n        string description,\\n        string location,\\n        uint256 price\\n    );\\n\\n\\n    /**\\n     * @dev Mapping of products to their index.\\n     * The key is the product index, and the value is a struct representing the product details.\\n     */\\n    mapping(uint256 => Product) internal products;\\n    \\n    /**\\n     * @dev Mapping containing the number of times an item is bought by a user.\\n     * The outer mapping uses the user's address as the key, and the inner mapping uses the product index as the key.\\n     * The value is the count of how many times the user has bought the corresponding product.\\n     */\\n    mapping(address => mapping(uint256 => uint256)) internal userItemsCount;\\n    \\n    /**\\n     * @dev Mapping containing the items bought by a user.\\n     * The key is the user's address, and the value is an array of product indices representing the items bought by the user.\\n     */\\n    mapping(address => uint256[]) internal userItems;\\n\\n\\n    /**\\n     * @dev Modifier to check if the caller is the owner of a product.\\n     * @param _index Index of the product.\\n     * @param caller Address of the caller.\\n     */\\n    modifier isOwner(uint _index, address caller) {\\n        require(products[_index].owner == caller, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to check if the product index is valid.\\n     * @param _index Index of the product.\\n     */\\n    modifier isValidProductIndex(uint256 _index) {\\n        require(_index < productsLength, \\\"Invalid product index\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Writes a new product to the marketplace.\\n     * @param _name Name of the product.\\n     * @param _image Link to an image of the product.\\n     * @param _description Description of the product.\\n     * @param _location Location of the product.\\n     * @param _price Price of the product in tokens.\\n     */\\n    function writeProduct(\\n        string memory _name,\\n        string memory _image,\\n        string memory _description,\\n        string memory _location,\\n        uint256 _price\\n    ) public {\\n        // Add check to ensure that price of product is greater than 0\\n        require(_price > 0, \\\"Price must be greater than 0\\\");\\n        // Add checks to ensure that other input parameters are not empty\\n        require(bytes(_name).length > 0, \\\"Name must not be empty\\\");\\n        require(bytes(_image).length > 0, \\\"Image link must not be empty\\\");\\n        require(bytes(_description).length > 0, \\\"Description must not be empty\\\");\\n        require(bytes(_location).length > 0, \\\"Location must not be empty\\\");\\n        // Number of times the product has been sold is initially 0 because it has not been sold yet\\n        uint256 _sold = 0;\\n        // Adds a new Product struct to the products mapping\\n        products[productsLength] = Product(\\n            // Sender's address is set as the owner\\n            payable(msg.sender),\\n            _name,\\n            _image,\\n            _description,\\n            _location,\\n            _price,\\n            _sold\\n        );\\n        // Increases the number of products in the marketplace by 1\\n        productsLength++;\\n        emit ProductAdded(\\n            msg.sender,\\n            productsLength - 1,\\n            _name,\\n            _image,\\n            _description,\\n            _location,\\n            _price\\n        );\\n        \\n    }\\n\\n    /**\\n     * @dev Reads a product from the marketplace.\\n     * @param _index Index of the product.\\n     * @return owner Address of the product owner.\\n     * @return name Name of the product.\\n     * @return image Link to an image of the product.\\n     * @return description Description of the product.\\n     * @return location Location of the product.\\n     * @return price Price of the product in tokens.\\n     * @return sold Number of times the product has been sold.\\n     */\\n    function readProduct(uint256 _index)\\n        public\\n        view\\n        isValidProductIndex(_index)\\n        returns (\\n            address payable owner,\\n            string memory name,\\n            string memory image,\\n            string memory description,\\n            string memory location,\\n            uint256 price,\\n            uint256 sold\\n        )\\n    {\\n        // Validate that the index is within the valid range\\n        require(_index < productsLength, \\\"Invalid product index\\\");\\n\\n        // Retrieve product details\\n        Product memory product = products[_index];\\n\\n        // Check string lengths to ensure they are not empty\\n        require(bytes(product.name).length > 0, \\\"Product name is empty\\\");\\n        require(bytes(product.image).length > 0, \\\"Product image link is empty\\\");\\n        require(bytes(product.description).length > 0, \\\"Product description is empty\\\");\\n        require(bytes(product.location).length > 0, \\\"Product location is empty\\\");\\n\\n        // Return product details\\n        return (\\n            product.owner,\\n            product.name,\\n            product.image,\\n            product.description,\\n            product.location,\\n            product.price,\\n            product.sold\\n        );\\n    }\\n\\n\\n    /**\\n     * @dev Buys a product from the marketplace.\\n     * @param _index Index of the product.\\n     */\\n    function buyProduct(\\n        // Index of the product\\n        uint256 _index\\n    ) public isValidProductIndex(_index) payable {        \\n        uint256 _totalAmount = products[_index].price;\\n        // transfer amount\\n        require(\\n            IERC20Token(cEURTokenAddress).transferFrom(\\n                // Sender's address is the buyer\\n                msg.sender,\\n                // Receiver's address is the contract\\n                address(this),\\n                // Amount of tokens to transfer is the total amount of order\\n                _totalAmount\\n            ),\\n            // If transfer fails, throw an error message\\n            \\\"Transfer failed.\\\"\\n        );\\n\\n        // Increase the number of times the product has been sold\\n        products[_index].sold++;\\n\\n        // Check if item does not exist in useritems and add item to user array\\n        if (userItemsCount[msg.sender][_index] == 0) {\\n            userItems[msg.sender].push(_index);\\n        }\\n\\n        // Update item count\\n        userItemsCount[msg.sender][_index]++;\\n        // Inside the buyProduct function\\n       emit ProductPurchased(msg.sender, _index, 1);\\n    }\\n\\n    /**\\n     * @dev Get user items array.\\n     * @param _user Address of the user.\\n     * @return An array of product indices owned by the user.\\n     */\\n    function getUserItem(address _user) public view returns (uint256[] memory){\\n        return userItems[_user];\\n    }\\n\\n    /**\\n     * @dev Get user items count.\\n     * @param _user Address of the user.\\n     * @param _index Index of the product.\\n     * @return The number of times the user has bought the specified product.\\n     */\\n    function getUserItemsCount(address _user, uint256 _index) public view isValidProductIndex(_index) returns (uint256){\\n        return userItemsCount[_user][_index];\\n    }\\n\\n    /**\\n     * @dev Remove a product from the marketplace.\\n     * @param _indexToRemove Index of the product to remove.\\n     */\\n    function removeProduct(\\n        uint _indexToRemove\\n    ) public isValidProductIndex(_indexToRemove) isOwner(_indexToRemove, msg.sender) {\\n        delete (products[_indexToRemove]);\\n        emit ProductRemoved(msg.sender, _indexToRemove);\\n    }\\n\\n    /**\\n     * @dev Update pricing of a product from the marketplace.\\n     * @param _indexToUpdate Index of the product to update.\\n     * @param _newPrice New price of the product.\\n     */\\n    function updateProduct(\\n        uint _indexToUpdate,\\n        uint _newPrice\\n    ) public isValidProductIndex(_indexToUpdate) isOwner(_indexToUpdate, msg.sender) {\\n        products[_indexToUpdate].price = _newPrice;\\n        emit ProductUpdated(msg.sender, _indexToUpdate, _newPrice);\\n    }\\n\\n    /**\\n     * @dev Returns the number of products in the marketplace.\\n     * @return The total number of products.\\n     */\\n    function getProductsLength() public view returns (uint256) {\\n        return (productsLength);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x3fb8bd599be5bd484cb4839287c8cbf7eb36ba1042fc29aa15fea233e1975b4e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600080557310c892a6ec43a53e45d0b916b4b7d383b1b78c0f600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006957600080fd5b5061217b806100796000396000f3fe60806040526004361061007b5760003560e01c80635ee95cae1161004e5780635ee95cae1461014e5780638642269e146101775780638da8f27b14610193578063fffa7e2e146101bc5761007b565b80631155dfe514610080578063279057f8146100ab57806331f45cab146100e85780633592c50814610111575b600080fd5b34801561008c57600080fd5b506100956101ff565b6040516100a2919061116d565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190611226565b610208565b6040516100df919061116d565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190611266565b6102a9565b005b34801561011d57600080fd5b50610138600480360381019061013391906112a6565b610405565b6040516101459190611391565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906113b3565b61049c565b005b610191600480360381019061018c91906113b3565b61065e565b005b34801561019f57600080fd5b506101ba60048036038101906101b59190611526565b610945565b005b3480156101c857600080fd5b506101e360048036038101906101de91906113b3565b610c31565b6040516101f697969594939291906116b1565b60405180910390f35b60008054905090565b600081600054811061024f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024690611788565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205491505092915050565b8160005481106102ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e590611788565b60405180910390fd5b82338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b906117f4565b60405180910390fd5b836002600087815260200190815260200160002060050181905550843373ffffffffffffffffffffffffffffffffffffffff167f8b9e7bb75a916fbba09acfeb85ab8d2a39b288884a7af3dca1eec5b3c31a3c38866040516103f6919061116d565b60405180910390a35050505050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561049057602002820191906000526020600020905b81548152602001906001019080831161047c575b50505050509050919050565b8060005481106104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611788565b60405180910390fd5b81338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e906117f4565b60405180910390fd5b60026000858152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105d291906110f7565b6002820160006105e291906110f7565b6003820160006105f291906110f7565b60048201600061060291906110f7565b600582016000905560068201600090555050833373ffffffffffffffffffffffffffffffffffffffff167f8d73b39fd1c1240bd6b0e38e6190cfa73f69346002fdbfa18c2156e6f91474d360405160405180910390a350505050565b8060005481106106a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069a90611788565b60405180910390fd5b600060026000848152602001908152602001600020600501549050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161071d93929190611823565b6020604051808303816000875af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190611892565b61079f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107969061190b565b60405180910390fd5b6002600084815260200190815260200160002060060160008154809291906107c69061195a565b91905055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020540361088a57600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150506001900390600052602060002001600090919091909150555b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008154809291906108eb9061195a565b9190505550823373ffffffffffffffffffffffffffffffffffffffff167f228a5d93a19503d5154326b1b21603e2cdd97bda22fc58196235b4490659fc01600160405161093891906119e7565b60405180910390a3505050565b60008111610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097f90611a4e565b60405180910390fd5b60008551116109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c390611aba565b60405180910390fd5b6000845111610a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0790611b26565b60405180910390fd5b6000835111610a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4b90611b92565b60405180910390fd5b6000825111610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f90611bfe565b60405180910390fd5b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200185815260200184815260200183815260200182815250600260008054815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610b539190611e20565b506040820151816002019081610b699190611e20565b506060820151816003019081610b7f9190611e20565b506080820151816004019081610b959190611e20565b5060a0820151816005015560c08201518160060155905050600080815480929190610bbf9061195a565b91905055506001600054610bd39190611ef2565b3373ffffffffffffffffffffffffffffffffffffffff167ffbb328e633af6120893044136ab8ef7ee82a89f48d7166bf10a711a8f99857c28888888888604051610c21959493929190611f26565b60405180910390a3505050505050565b6000606080606080600080876000548110610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7890611788565b60405180910390fd5b6000548910610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90611788565b60405180910390fd5b6000600260008b81526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610d4b90611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7790611c4d565b8015610dc45780601f10610d9957610100808354040283529160200191610dc4565b820191906000526020600020905b815481529060010190602001808311610da757829003601f168201915b50505050508152602001600282018054610ddd90611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0990611c4d565b8015610e565780601f10610e2b57610100808354040283529160200191610e56565b820191906000526020600020905b815481529060010190602001808311610e3957829003601f168201915b50505050508152602001600382018054610e6f90611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9b90611c4d565b8015610ee85780601f10610ebd57610100808354040283529160200191610ee8565b820191906000526020600020905b815481529060010190602001808311610ecb57829003601f168201915b50505050508152602001600482018054610f0190611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2d90611c4d565b8015610f7a5780601f10610f4f57610100808354040283529160200191610f7a565b820191906000526020600020905b815481529060010190602001808311610f5d57829003601f168201915b50505050508152602001600582015481526020016006820154815250509050600081602001515111610fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd890611fe1565b60405180910390fd5b600081604001515111611029576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110209061204d565b60405180910390fd5b600081606001515111611071576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611068906120b9565b60405180910390fd5b6000816080015151116110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b090612125565b60405180910390fd5b806000015181602001518260400151836060015184608001518560a001518660c0015198509850985098509850985098505050919395979092949650565b50805461110390611c4d565b6000825580601f106111155750611134565b601f0160209004906000526020600020908101906111339190611137565b5b50565b5b80821115611150576000816000905550600101611138565b5090565b6000819050919050565b61116781611154565b82525050565b6000602082019050611182600083018461115e565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111c78261119c565b9050919050565b6111d7816111bc565b81146111e257600080fd5b50565b6000813590506111f4816111ce565b92915050565b61120381611154565b811461120e57600080fd5b50565b600081359050611220816111fa565b92915050565b6000806040838503121561123d5761123c611192565b5b600061124b858286016111e5565b925050602061125c85828601611211565b9150509250929050565b6000806040838503121561127d5761127c611192565b5b600061128b85828601611211565b925050602061129c85828601611211565b9150509250929050565b6000602082840312156112bc576112bb611192565b5b60006112ca848285016111e5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61130881611154565b82525050565b600061131a83836112ff565b60208301905092915050565b6000602082019050919050565b600061133e826112d3565b61134881856112de565b9350611353836112ef565b8060005b8381101561138457815161136b888261130e565b975061137683611326565b925050600181019050611357565b5085935050505092915050565b600060208201905081810360008301526113ab8184611333565b905092915050565b6000602082840312156113c9576113c8611192565b5b60006113d784828501611211565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611433826113ea565b810181811067ffffffffffffffff82111715611452576114516113fb565b5b80604052505050565b6000611465611188565b9050611471828261142a565b919050565b600067ffffffffffffffff821115611491576114906113fb565b5b61149a826113ea565b9050602081019050919050565b82818337600083830152505050565b60006114c96114c484611476565b61145b565b9050828152602081018484840111156114e5576114e46113e5565b5b6114f08482856114a7565b509392505050565b600082601f83011261150d5761150c6113e0565b5b813561151d8482602086016114b6565b91505092915050565b600080600080600060a0868803121561154257611541611192565b5b600086013567ffffffffffffffff8111156115605761155f611197565b5b61156c888289016114f8565b955050602086013567ffffffffffffffff81111561158d5761158c611197565b5b611599888289016114f8565b945050604086013567ffffffffffffffff8111156115ba576115b9611197565b5b6115c6888289016114f8565b935050606086013567ffffffffffffffff8111156115e7576115e6611197565b5b6115f3888289016114f8565b925050608061160488828901611211565b9150509295509295909350565b600061161c8261119c565b9050919050565b61162c81611611565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561166c578082015181840152602081019050611651565b60008484015250505050565b600061168382611632565b61168d818561163d565b935061169d81856020860161164e565b6116a6816113ea565b840191505092915050565b600060e0820190506116c6600083018a611623565b81810360208301526116d88189611678565b905081810360408301526116ec8188611678565b905081810360608301526117008187611678565b905081810360808301526117148186611678565b905061172360a083018561115e565b61173060c083018461115e565b98975050505050505050565b7f496e76616c69642070726f6475637420696e6465780000000000000000000000600082015250565b600061177260158361163d565b915061177d8261173c565b602082019050919050565b600060208201905081810360008301526117a181611765565b9050919050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006117de60098361163d565b91506117e9826117a8565b602082019050919050565b6000602082019050818103600083015261180d816117d1565b9050919050565b61181d816111bc565b82525050565b60006060820190506118386000830186611814565b6118456020830185611814565b611852604083018461115e565b949350505050565b60008115159050919050565b61186f8161185a565b811461187a57600080fd5b50565b60008151905061188c81611866565b92915050565b6000602082840312156118a8576118a7611192565b5b60006118b68482850161187d565b91505092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006118f560108361163d565b9150611900826118bf565b602082019050919050565b60006020820190508181036000830152611924816118e8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061196582611154565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119975761199661192b565b5b600182019050919050565b6000819050919050565b6000819050919050565b60006119d16119cc6119c7846119a2565b6119ac565b611154565b9050919050565b6119e1816119b6565b82525050565b60006020820190506119fc60008301846119d8565b92915050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b6000611a38601c8361163d565b9150611a4382611a02565b602082019050919050565b60006020820190508181036000830152611a6781611a2b565b9050919050565b7f4e616d65206d757374206e6f7420626520656d70747900000000000000000000600082015250565b6000611aa460168361163d565b9150611aaf82611a6e565b602082019050919050565b60006020820190508181036000830152611ad381611a97565b9050919050565b7f496d616765206c696e6b206d757374206e6f7420626520656d70747900000000600082015250565b6000611b10601c8361163d565b9150611b1b82611ada565b602082019050919050565b60006020820190508181036000830152611b3f81611b03565b9050919050565b7f4465736372697074696f6e206d757374206e6f7420626520656d707479000000600082015250565b6000611b7c601d8361163d565b9150611b8782611b46565b602082019050919050565b60006020820190508181036000830152611bab81611b6f565b9050919050565b7f4c6f636174696f6e206d757374206e6f7420626520656d707479000000000000600082015250565b6000611be8601a8361163d565b9150611bf382611bb2565b602082019050919050565b60006020820190508181036000830152611c1781611bdb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c6557607f821691505b602082108103611c7857611c77611c1e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ce07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ca3565b611cea8683611ca3565b95508019841693508086168417925050509392505050565b6000611d1d611d18611d1384611154565b6119ac565b611154565b9050919050565b6000819050919050565b611d3783611d02565b611d4b611d4382611d24565b848454611cb0565b825550505050565b600090565b611d60611d53565b611d6b818484611d2e565b505050565b5b81811015611d8f57611d84600082611d58565b600181019050611d71565b5050565b601f821115611dd457611da581611c7e565b611dae84611c93565b81016020851015611dbd578190505b611dd1611dc985611c93565b830182611d70565b50505b505050565b600082821c905092915050565b6000611df760001984600802611dd9565b1980831691505092915050565b6000611e108383611de6565b9150826002028217905092915050565b611e2982611632565b67ffffffffffffffff811115611e4257611e416113fb565b5b611e4c8254611c4d565b611e57828285611d93565b600060209050601f831160018114611e8a5760008415611e78578287015190505b611e828582611e04565b865550611eea565b601f198416611e9886611c7e565b60005b82811015611ec057848901518255600182019150602085019450602081019050611e9b565b86831015611edd5784890151611ed9601f891682611de6565b8355505b6001600288020188555050505b505050505050565b6000611efd82611154565b9150611f0883611154565b9250828203905081811115611f2057611f1f61192b565b5b92915050565b600060a0820190508181036000830152611f408188611678565b90508181036020830152611f548187611678565b90508181036040830152611f688186611678565b90508181036060830152611f7c8185611678565b9050611f8b608083018461115e565b9695505050505050565b7f50726f64756374206e616d6520697320656d7074790000000000000000000000600082015250565b6000611fcb60158361163d565b9150611fd682611f95565b602082019050919050565b60006020820190508181036000830152611ffa81611fbe565b9050919050565b7f50726f6475637420696d616765206c696e6b20697320656d7074790000000000600082015250565b6000612037601b8361163d565b915061204282612001565b602082019050919050565b600060208201905081810360008301526120668161202a565b9050919050565b7f50726f64756374206465736372697074696f6e20697320656d70747900000000600082015250565b60006120a3601c8361163d565b91506120ae8261206d565b602082019050919050565b600060208201905081810360008301526120d281612096565b9050919050565b7f50726f64756374206c6f636174696f6e20697320656d70747900000000000000600082015250565b600061210f60198361163d565b915061211a826120d9565b602082019050919050565b6000602082019050818103600083015261213e81612102565b905091905056fea26469706673582212209b0088946a4964d115f2f0e3d32c2e8a24057ddaaba7e1f251ce0c156cf2dc9464736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80635ee95cae1161004e5780635ee95cae1461014e5780638642269e146101775780638da8f27b14610193578063fffa7e2e146101bc5761007b565b80631155dfe514610080578063279057f8146100ab57806331f45cab146100e85780633592c50814610111575b600080fd5b34801561008c57600080fd5b506100956101ff565b6040516100a2919061116d565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190611226565b610208565b6040516100df919061116d565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190611266565b6102a9565b005b34801561011d57600080fd5b50610138600480360381019061013391906112a6565b610405565b6040516101459190611391565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906113b3565b61049c565b005b610191600480360381019061018c91906113b3565b61065e565b005b34801561019f57600080fd5b506101ba60048036038101906101b59190611526565b610945565b005b3480156101c857600080fd5b506101e360048036038101906101de91906113b3565b610c31565b6040516101f697969594939291906116b1565b60405180910390f35b60008054905090565b600081600054811061024f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024690611788565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205491505092915050565b8160005481106102ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e590611788565b60405180910390fd5b82338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b906117f4565b60405180910390fd5b836002600087815260200190815260200160002060050181905550843373ffffffffffffffffffffffffffffffffffffffff167f8b9e7bb75a916fbba09acfeb85ab8d2a39b288884a7af3dca1eec5b3c31a3c38866040516103f6919061116d565b60405180910390a35050505050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561049057602002820191906000526020600020905b81548152602001906001019080831161047c575b50505050509050919050565b8060005481106104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611788565b60405180910390fd5b81338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e906117f4565b60405180910390fd5b60026000858152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105d291906110f7565b6002820160006105e291906110f7565b6003820160006105f291906110f7565b60048201600061060291906110f7565b600582016000905560068201600090555050833373ffffffffffffffffffffffffffffffffffffffff167f8d73b39fd1c1240bd6b0e38e6190cfa73f69346002fdbfa18c2156e6f91474d360405160405180910390a350505050565b8060005481106106a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069a90611788565b60405180910390fd5b600060026000848152602001908152602001600020600501549050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161071d93929190611823565b6020604051808303816000875af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190611892565b61079f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107969061190b565b60405180910390fd5b6002600084815260200190815260200160002060060160008154809291906107c69061195a565b91905055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020540361088a57600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150506001900390600052602060002001600090919091909150555b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008154809291906108eb9061195a565b9190505550823373ffffffffffffffffffffffffffffffffffffffff167f228a5d93a19503d5154326b1b21603e2cdd97bda22fc58196235b4490659fc01600160405161093891906119e7565b60405180910390a3505050565b60008111610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097f90611a4e565b60405180910390fd5b60008551116109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c390611aba565b60405180910390fd5b6000845111610a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0790611b26565b60405180910390fd5b6000835111610a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4b90611b92565b60405180910390fd5b6000825111610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f90611bfe565b60405180910390fd5b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200185815260200184815260200183815260200182815250600260008054815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610b539190611e20565b506040820151816002019081610b699190611e20565b506060820151816003019081610b7f9190611e20565b506080820151816004019081610b959190611e20565b5060a0820151816005015560c08201518160060155905050600080815480929190610bbf9061195a565b91905055506001600054610bd39190611ef2565b3373ffffffffffffffffffffffffffffffffffffffff167ffbb328e633af6120893044136ab8ef7ee82a89f48d7166bf10a711a8f99857c28888888888604051610c21959493929190611f26565b60405180910390a3505050505050565b6000606080606080600080876000548110610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7890611788565b60405180910390fd5b6000548910610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90611788565b60405180910390fd5b6000600260008b81526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610d4b90611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7790611c4d565b8015610dc45780601f10610d9957610100808354040283529160200191610dc4565b820191906000526020600020905b815481529060010190602001808311610da757829003601f168201915b50505050508152602001600282018054610ddd90611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0990611c4d565b8015610e565780601f10610e2b57610100808354040283529160200191610e56565b820191906000526020600020905b815481529060010190602001808311610e3957829003601f168201915b50505050508152602001600382018054610e6f90611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9b90611c4d565b8015610ee85780601f10610ebd57610100808354040283529160200191610ee8565b820191906000526020600020905b815481529060010190602001808311610ecb57829003601f168201915b50505050508152602001600482018054610f0190611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2d90611c4d565b8015610f7a5780601f10610f4f57610100808354040283529160200191610f7a565b820191906000526020600020905b815481529060010190602001808311610f5d57829003601f168201915b50505050508152602001600582015481526020016006820154815250509050600081602001515111610fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd890611fe1565b60405180910390fd5b600081604001515111611029576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110209061204d565b60405180910390fd5b600081606001515111611071576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611068906120b9565b60405180910390fd5b6000816080015151116110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b090612125565b60405180910390fd5b806000015181602001518260400151836060015184608001518560a001518660c0015198509850985098509850985098505050919395979092949650565b50805461110390611c4d565b6000825580601f106111155750611134565b601f0160209004906000526020600020908101906111339190611137565b5b50565b5b80821115611150576000816000905550600101611138565b5090565b6000819050919050565b61116781611154565b82525050565b6000602082019050611182600083018461115e565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111c78261119c565b9050919050565b6111d7816111bc565b81146111e257600080fd5b50565b6000813590506111f4816111ce565b92915050565b61120381611154565b811461120e57600080fd5b50565b600081359050611220816111fa565b92915050565b6000806040838503121561123d5761123c611192565b5b600061124b858286016111e5565b925050602061125c85828601611211565b9150509250929050565b6000806040838503121561127d5761127c611192565b5b600061128b85828601611211565b925050602061129c85828601611211565b9150509250929050565b6000602082840312156112bc576112bb611192565b5b60006112ca848285016111e5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61130881611154565b82525050565b600061131a83836112ff565b60208301905092915050565b6000602082019050919050565b600061133e826112d3565b61134881856112de565b9350611353836112ef565b8060005b8381101561138457815161136b888261130e565b975061137683611326565b925050600181019050611357565b5085935050505092915050565b600060208201905081810360008301526113ab8184611333565b905092915050565b6000602082840312156113c9576113c8611192565b5b60006113d784828501611211565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611433826113ea565b810181811067ffffffffffffffff82111715611452576114516113fb565b5b80604052505050565b6000611465611188565b9050611471828261142a565b919050565b600067ffffffffffffffff821115611491576114906113fb565b5b61149a826113ea565b9050602081019050919050565b82818337600083830152505050565b60006114c96114c484611476565b61145b565b9050828152602081018484840111156114e5576114e46113e5565b5b6114f08482856114a7565b509392505050565b600082601f83011261150d5761150c6113e0565b5b813561151d8482602086016114b6565b91505092915050565b600080600080600060a0868803121561154257611541611192565b5b600086013567ffffffffffffffff8111156115605761155f611197565b5b61156c888289016114f8565b955050602086013567ffffffffffffffff81111561158d5761158c611197565b5b611599888289016114f8565b945050604086013567ffffffffffffffff8111156115ba576115b9611197565b5b6115c6888289016114f8565b935050606086013567ffffffffffffffff8111156115e7576115e6611197565b5b6115f3888289016114f8565b925050608061160488828901611211565b9150509295509295909350565b600061161c8261119c565b9050919050565b61162c81611611565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561166c578082015181840152602081019050611651565b60008484015250505050565b600061168382611632565b61168d818561163d565b935061169d81856020860161164e565b6116a6816113ea565b840191505092915050565b600060e0820190506116c6600083018a611623565b81810360208301526116d88189611678565b905081810360408301526116ec8188611678565b905081810360608301526117008187611678565b905081810360808301526117148186611678565b905061172360a083018561115e565b61173060c083018461115e565b98975050505050505050565b7f496e76616c69642070726f6475637420696e6465780000000000000000000000600082015250565b600061177260158361163d565b915061177d8261173c565b602082019050919050565b600060208201905081810360008301526117a181611765565b9050919050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006117de60098361163d565b91506117e9826117a8565b602082019050919050565b6000602082019050818103600083015261180d816117d1565b9050919050565b61181d816111bc565b82525050565b60006060820190506118386000830186611814565b6118456020830185611814565b611852604083018461115e565b949350505050565b60008115159050919050565b61186f8161185a565b811461187a57600080fd5b50565b60008151905061188c81611866565b92915050565b6000602082840312156118a8576118a7611192565b5b60006118b68482850161187d565b91505092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006118f560108361163d565b9150611900826118bf565b602082019050919050565b60006020820190508181036000830152611924816118e8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061196582611154565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119975761199661192b565b5b600182019050919050565b6000819050919050565b6000819050919050565b60006119d16119cc6119c7846119a2565b6119ac565b611154565b9050919050565b6119e1816119b6565b82525050565b60006020820190506119fc60008301846119d8565b92915050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b6000611a38601c8361163d565b9150611a4382611a02565b602082019050919050565b60006020820190508181036000830152611a6781611a2b565b9050919050565b7f4e616d65206d757374206e6f7420626520656d70747900000000000000000000600082015250565b6000611aa460168361163d565b9150611aaf82611a6e565b602082019050919050565b60006020820190508181036000830152611ad381611a97565b9050919050565b7f496d616765206c696e6b206d757374206e6f7420626520656d70747900000000600082015250565b6000611b10601c8361163d565b9150611b1b82611ada565b602082019050919050565b60006020820190508181036000830152611b3f81611b03565b9050919050565b7f4465736372697074696f6e206d757374206e6f7420626520656d707479000000600082015250565b6000611b7c601d8361163d565b9150611b8782611b46565b602082019050919050565b60006020820190508181036000830152611bab81611b6f565b9050919050565b7f4c6f636174696f6e206d757374206e6f7420626520656d707479000000000000600082015250565b6000611be8601a8361163d565b9150611bf382611bb2565b602082019050919050565b60006020820190508181036000830152611c1781611bdb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c6557607f821691505b602082108103611c7857611c77611c1e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ce07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ca3565b611cea8683611ca3565b95508019841693508086168417925050509392505050565b6000611d1d611d18611d1384611154565b6119ac565b611154565b9050919050565b6000819050919050565b611d3783611d02565b611d4b611d4382611d24565b848454611cb0565b825550505050565b600090565b611d60611d53565b611d6b818484611d2e565b505050565b5b81811015611d8f57611d84600082611d58565b600181019050611d71565b5050565b601f821115611dd457611da581611c7e565b611dae84611c93565b81016020851015611dbd578190505b611dd1611dc985611c93565b830182611d70565b50505b505050565b600082821c905092915050565b6000611df760001984600802611dd9565b1980831691505092915050565b6000611e108383611de6565b9150826002028217905092915050565b611e2982611632565b67ffffffffffffffff811115611e4257611e416113fb565b5b611e4c8254611c4d565b611e57828285611d93565b600060209050601f831160018114611e8a5760008415611e78578287015190505b611e828582611e04565b865550611eea565b601f198416611e9886611c7e565b60005b82811015611ec057848901518255600182019150602085019450602081019050611e9b565b86831015611edd5784890151611ed9601f891682611de6565b8355505b6001600288020188555050505b505050505050565b6000611efd82611154565b9150611f0883611154565b9250828203905081811115611f2057611f1f61192b565b5b92915050565b600060a0820190508181036000830152611f408188611678565b90508181036020830152611f548187611678565b90508181036040830152611f688186611678565b90508181036060830152611f7c8185611678565b9050611f8b608083018461115e565b9695505050505050565b7f50726f64756374206e616d6520697320656d7074790000000000000000000000600082015250565b6000611fcb60158361163d565b9150611fd682611f95565b602082019050919050565b60006020820190508181036000830152611ffa81611fbe565b9050919050565b7f50726f6475637420696d616765206c696e6b20697320656d7074790000000000600082015250565b6000612037601b8361163d565b915061204282612001565b602082019050919050565b600060208201905081810360008301526120668161202a565b9050919050565b7f50726f64756374206465736372697074696f6e20697320656d70747900000000600082015250565b60006120a3601c8361163d565b91506120ae8261206d565b602082019050919050565b600060208201905081810360008301526120d281612096565b9050919050565b7f50726f64756374206c6f636174696f6e20697320656d70747900000000000000600082015250565b600061210f60198361163d565b915061211a826120d9565b602082019050919050565b6000602082019050818103600083015261213e81612102565b905091905056fea26469706673582212209b0088946a4964d115f2f0e3d32c2e8a24057ddaaba7e1f251ce0c156cf2dc9464736f6c63430008110033",
  "devdoc": {
    "details": "A decentralized marketplace contract for buying and selling products using ERC20 tokens.",
    "events": {
      "ProductAdded(address,uint256,string,string,string,string,uint256)": {
        "details": "Emitted when a new product is added to the marketplace.",
        "params": {
          "description": "Description of the new product.",
          "image": "Link to the image of the new product.",
          "location": "Location information of the new product.",
          "name": "Name of the new product.",
          "owner": "Address of the owner who added the product.",
          "price": "Price of the new product.",
          "productIndex": "Index of the product that was added."
        }
      },
      "ProductPurchased(address,uint256,uint256)": {
        "details": "Emitted when a product is successfully purchased from the marketplace.",
        "params": {
          "buyer": "Address of the buyer who purchased the product.",
          "productIndex": "Index of the product that was purchased.",
          "quantity": "The quantity of the product purchased."
        }
      },
      "ProductRemoved(address,uint256)": {
        "details": "Emitted when a product is removed from the marketplace.",
        "params": {
          "owner": "Address of the owner who removed the product.",
          "productIndex": "Index of the product that was removed."
        }
      },
      "ProductUpdated(address,uint256,uint256)": {
        "details": "Emitted when the price of a product in the marketplace is updated.",
        "params": {
          "newPrice": "The new price of the product after the update.",
          "owner": "Address of the owner who updated the product.",
          "productIndex": "Index of the product that was updated."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "buyProduct(uint256)": {
        "details": "Buys a product from the marketplace.",
        "params": {
          "_index": "Index of the product."
        }
      },
      "getProductsLength()": {
        "details": "Returns the number of products in the marketplace.",
        "returns": {
          "_0": "The total number of products."
        }
      },
      "getUserItem(address)": {
        "details": "Get user items array.",
        "params": {
          "_user": "Address of the user."
        },
        "returns": {
          "_0": "An array of product indices owned by the user."
        }
      },
      "getUserItemsCount(address,uint256)": {
        "details": "Get user items count.",
        "params": {
          "_index": "Index of the product.",
          "_user": "Address of the user."
        },
        "returns": {
          "_0": "The number of times the user has bought the specified product."
        }
      },
      "readProduct(uint256)": {
        "details": "Reads a product from the marketplace.",
        "params": {
          "_index": "Index of the product."
        },
        "returns": {
          "description": "Description of the product.",
          "image": "Link to an image of the product.",
          "location": "Location of the product.",
          "name": "Name of the product.",
          "owner": "Address of the product owner.",
          "price": "Price of the product in tokens.",
          "sold": "Number of times the product has been sold."
        }
      },
      "removeProduct(uint256)": {
        "details": "Remove a product from the marketplace.",
        "params": {
          "_indexToRemove": "Index of the product to remove."
        }
      },
      "updateProduct(uint256,uint256)": {
        "details": "Update pricing of a product from the marketplace.",
        "params": {
          "_indexToUpdate": "Index of the product to update.",
          "_newPrice": "New price of the product."
        }
      },
      "writeProduct(string,string,string,string,uint256)": {
        "details": "Writes a new product to the marketplace.",
        "params": {
          "_description": "Description of the product.",
          "_image": "Link to an image of the product.",
          "_location": "Location of the product.",
          "_name": "Name of the product.",
          "_price": "Price of the product in tokens."
        }
      }
    },
    "stateVariables": {
      "products": {
        "details": "Mapping of products to their index. The key is the product index, and the value is a struct representing the product details."
      },
      "userItems": {
        "details": "Mapping containing the items bought by a user. The key is the user's address, and the value is an array of product indices representing the items bought by the user."
      },
      "userItemsCount": {
        "details": "Mapping containing the number of times an item is bought by a user. The outer mapping uses the user's address as the key, and the inner mapping uses the product index as the key. The value is the count of how many times the user has bought the corresponding product."
      }
    },
    "title": "Marketplace Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 73,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "productsLength",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 76,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "cEURTokenAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 139,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "products",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Product)91_storage)"
      },
      {
        "astId": 146,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "userItemsCount",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 152,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "userItems",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Product)91_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.Product)",
        "numberOfBytes": "32",
        "value": "t_struct(Product)91_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Product)91_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Product",
        "members": [
          {
            "astId": 78,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 80,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 82,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "image",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 84,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 86,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "location",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 88,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 90,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "sold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
